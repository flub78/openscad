/**
 * Módulo para trabajar con pilas cilíndricas.
 *
 * @author  Joaquín Fernández
 * @url     https://gitlab.com/joaquinfq/openscad/blob/master/Modules/Cylinder/battery.scad
 * @license CC-BY-NC-4.0
 */
//-----------------------------------------------------------------------------
/**
 * Medidas de algunas pilas cilíndricas.
 *
 * @type {Array[]}
 *
 * @see https://en.wikipedia.org/wiki/List_of_battery_sizes
 */
batteries = [
    // Nombre  Diámetro  Longitud
    [ "10180",    10.00,    18.00 ],
    [ "10280",    10.00,    28.00 ],
    [ "10440",    10.00,    44.00 ],
    [ "14250",    14.00,    25.00 ],
    [ "14430",    14.00,    43.00 ],
    [ "14500",    14.00,    53.00 ],
    [ "14650",    14.00,    65.00 ],
    [ "15270",    15.00,    27.00 ],
    [ "16340",    16.00,    34.00 ],
    [ "16650",    16.00,    65.00 ],
    [ "17340",    17.00,    34.00 ],
    [ "17500",    17.00,    50.00 ],
    [ "17670",    17.00,    67.00 ],
    [ "18350",    18.00,    35.00 ],
    [ "18490",    18.00,    49.00 ],
    [ "18500",    18.00,    50.00 ],
    [ "18650",    18.00,    65.00 ],
    [ "20700",    20.00,    70.00 ],
    [ "21700",    21.00,    70.00 ],
    [ "25500",    25.00,    50.00 ],
    [ "26650",    26.00,    65.00 ],
    [ "32600",    32.00,    60.00 ],
    [ "32650",    32.00,    67.70 ],
    [ "75400",     7.50,    40.00 ],
    [ "A23",      10.30,    28.50 ],
    [ "AA",       14.50,    50.50 ],
    [ "AAA",      10.50,    44.50 ],
    [ "AAAA",      8.30,    42.50 ],
    [ "C",        26.20,    50.00 ],
    [ "D",        34.20,    61.50 ],
    [ "BR2335",   23.00,     3.50 ],
    [ "CR927",     9.50,     2.70 ],
    [ "CR1025",   10.00,     2.50 ],
    [ "CR1130",   11.50,     3.00 ],
    [ "CR1216",   12.50,     1.60 ],
    [ "CR1220",   12.50,     2.00 ],
    [ "CR1225",   12.50,     2.50 ],
    [ "CR1616",   16.00,     1.60 ],
    [ "CR1620",   16.00,     2.00 ],
    [ "CR1632",   16.00,     3.20 ],
    [ "CR2012",   20.00,     1.20 ],
    [ "CR2016",   20.00,     1.60 ],
    [ "CR2020",   20.00,     2.00 ],
    [ "CR2025",   20.00,     2.50 ],
    [ "CR2032",   20.00,     3.20 ],
    [ "CR2040",   20.00,     4.00 ],
    [ "CR2320",   23.00,     2.00 ],
    [ "CR2325",   23.00,     2.50 ],
    [ "CR2330",   23.00,     3.00 ],
    [ "CR2354",   23.00,     5.40 ],
    [ "CR2412",   24.50,     1.20 ],
    [ "CR2430",   24.50,     3.00 ],
    [ "CR2450",   24.50,     5.00 ],
    [ "CR2477",   24.50,     7.70 ],
    [ "CR3032",   30.00,     3.20 ],
    [ "CR11108",  11.60,    10.80 ],
    [ "LR41",      7.90,     3.60 ],
    [ "LR42",     11.60,     3.60 ],
    [ "LR43",     11.60,     4.20 ],
    [ "LR44",     11.60,     5.40 ],
    [ "LR45",      9.50,     3.60 ],
    [ "LR48",      7.90,     5.40 ],
    [ "LR52",     15.80,    11.10 ],
    [ "LR54",     11.60,     3.10 ],
    [ "LR55",     11.60,     2.10 ],
    [ "LR57",      9.50,     2.60 ],
    [ "LR58",      7.90,     2.10 ],
    [ "LR59",      7.90,     2.60 ],
    [ "LR60",      6.80,     2.10 ],
    [ "LR62",      5.80,     1.60 ],
    [ "LR63",      5.80,     2.10 ],
    [ "LR64",      5.80,     2.70 ],
    [ "LR65",      6.80,     1.65 ],
    [ "LR66",      6.80,     2.60 ],
    [ "LR67",      7.90,     1.65 ],
    [ "LR68",      9.50,     1.60 ],
    [ "LR69",      9.50,     2.10 ],
    [ "LR731",     7.90,     3.10 ],
    [ "LR932",     9.30,     3.20 ],
    [ "SR416",     4.80,     1.60 ],
    [ "SR512",     5.80,     1.30 ],
    [ "SR712",     7.90,     1.30 ]
];

/**
 * Devuelve las medidas de la pila.
 *
 * @param {String} name Nombre de la pila.
 *
 * @return {Array|undef}
 */
function getBattery(name) = let(_index = search([ name ], batteries, 1, 0))
    _index ? batteries[_index[0]] : undef;


/**
 * Dibuja un cilindro que representa la pila seleccionada.
 *
 * @param {String} name      Nombre de la pila.
 * @param {Float}  tolerance Tolerancia de las medidas.
 */
module battery(name, tolerance = 0)
{
    _battery = getBattery(name);
    if (_battery == undef)
    {
        echo(str("ERROR: Pila '", name, "' no configurada en la variable 'batteries'."));
    }
    else
    {
        cylinder(d = _battery[1] + tolerance, h = _battery[2] + tolerance);
    }
}
